{"ast":null,"code":"var _jsxFileName = \"/Users/sasha/Desktop/-STUDY-/WEBDEVELOPER COURSE/REACT/BRAIN/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nconst app = new Clarifai.App({\n  apiKey: '65a3206fd009407f9acdd7fdeabdc162'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 147,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }).catch(console.log);\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const _this$state = this.state,\n          isSignedIn = _this$state.isSignedIn,\n          imageUrl = _this$state.imageUrl,\n          route = _this$state.route,\n          box = _this$state.box;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })) : route === 'signin' ? React.createElement(SignIn, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sasha/Desktop/-STUDY-/WEBDEVELOPER COURSE/REACT/BRAIN/facerecognitionbrain/src/App.js"],"names":["React","Component","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","Particles","Clarifai","SignIn","Register","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","entries","joined","constructor","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","onButtonSubmit","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","console","log","err","onRouteChange","render"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport './App.css';\nimport Navigation from './components/navigation/Navigation';\nimport Logo from './components/Logo/Logo'\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm'\nimport Rank from './components/Rank/Rank'\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition'\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport SignIn from './components/SignIn/SignIn'\nimport Register from './components/Register/Register'\n\nconst app = new Clarifai.App({\n apiKey: '65a3206fd009407f9acdd7fdeabdc162'\n});\n\nconst particlesOptions = {\n  particles: {\n          number: {\n            value:147,\n            density: {\n              enable: true,\n              value_area: 800\n            }\n          }\n}\n}\n\nconst initialState = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n            id:'' ,\n            name : '' ,\n            email : '',\n            entries: 0,\n            joined: ''\n      }\n    }\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState\n  }\n\n  loadUser = (data) => {\n    this.setState({ user: {\n            id: data.id ,\n            name : data.name ,\n            email : data.email,\n            entries: data.entries,\n            joined: data.joined\n          }\n    })\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height),\n    }\n  }\n\n\n  displayFaceBox = (box) => {\n    this.setState({box:box})\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value})\n  } \n\n  onButtonSubmit = () => {\n    this.setState({imageUrl:this.state.input})\n    app.models.predict(\n    Clarifai.FACE_DETECT_MODEL, \n    this.state.input)\n    .then(response => {\n      if(response) {\n        fetch('http://localhost:3000/image', {\n                method: 'put',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify({\n                id: this.state.user.id\n          })\n        })\n        .then(response => response.json())\n        .then(count => {\n          this.setState(Object.assign(this.state.user, { entries: count}))\n        })\n        .catch(console.log)\n      }\n      this.displayFaceBox(this.calculateFaceLocation(response))\n        })\n    .catch(err => console.log(err))\n  }\n\n    onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState(initialState)\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n render() {\n  const { isSignedIn, imageUrl , route , box} = this.state\n  return ( \n    <div className=\"App\">\n    <Particles className='particles'\n      params ={particlesOptions}\n    />  \n      <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n      { route === 'home'\n      ? <div>\n        <Logo />\n         <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n        <ImageLinkForm \n        onInputChange = {this.onInputChange}\n        onButtonSubmit={this.onButtonSubmit}/>\n        <FaceRecognition box={box} imageUrl={imageUrl} />\n        </div>\n      : (\n        route === 'signin' \n        ? <SignIn \n        loadUser={this.loadUser}\n        onRouteChange={this.onRouteChange} />\n        : <Register \n          loadUser={this.loadUser}\n          onRouteChange={this.onRouteChange} />\n        )\n    }\n    </div>\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}